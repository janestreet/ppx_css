module Foo =
  struct
    [@@@ocaml.warning "-32"]
    let () =
      Inline_css.Private.append
        {|
/* ppx/ppx_css/test/test_preprocess_arguments/ppx_css_test_preprocess_arguments.ml */

*.class1 {
 color:var(--background-color)
}

*.class3 {
 background-color:var(--another-color)
}|}
    let (__type_info_for_ppx_css :
      ?rewrite:(string * string) list ->
        ?dont_hash:string list ->
          ?dont_hash_prefixes:string list -> string -> unit)
      =
      fun ?rewrite:_ ->
        fun ?dont_hash:_ -> fun ?dont_hash_prefixes:_ -> fun _ -> ()
    module type S  =
      sig
        module Variables :
        sig
          val set :
            ?another_color:string ->
              ?background_color:string -> unit -> Virtual_dom.Vdom.Attr.t
        end
        module For_referencing :
        sig
          val another_color : string
          val background_color : string
          val class1 : string
          val class2 : string
        end
        val class1 : Virtual_dom.Vdom.Attr.t
        val class2 : Virtual_dom.Vdom.Attr.t
      end
    type t = (module S)
    module Default : S =
      struct
        module Variables =
          struct
            let set ?another_color  ?background_color  () =
              let ppx_css_acc__001_ = [] in
              let ppx_css_acc__001_ =
                match another_color with
                | None -> ppx_css_acc__001_
                | Some ppx_css_value__002_ ->
                    ({|--another-color|}, ppx_css_value__002_) ::
                    ppx_css_acc__001_ in
              let ppx_css_acc__001_ =
                match background_color with
                | None -> ppx_css_acc__001_
                | Some ppx_css_value__002_ ->
                    ({|--background-color|}, ppx_css_value__002_) ::
                    ppx_css_acc__001_ in
              Virtual_dom.Vdom.Attr.__css_vars_no_kebabs ppx_css_acc__001_
          end
        module For_referencing =
          struct
            let class1 = {|class1|}
            let class2 = {|class3|}
            let another_color = {|--another-color|}
            let background_color = {|--background-color|}
          end
        let class1 = Virtual_dom.Vdom.Attr.class_ {|class1|}
        let class2 = Virtual_dom.Vdom.Attr.class_ {|class3|}
      end 
    include Default
    let default : t = (module Default)
  end
module _ = Foo
